name: C/C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: run-cmake
        run: cmake -B build
   
      # Build engine Release
      - name: compile
        shell: bash
        run: |
          cd build
          make

  build-windows:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1
        
      # Generate sln
      - name: run-cmake
        run: cmake -B build
   
      # Build Release
      - name: compile-release
        shell: cmd
        run: |
          @echo | msbuild -m build/CppUtils.sln /t:build /p:Configuration="Release" /p:Platform="x64" /p:BuildInParallel=true
          
      # Build Debug
      - name: compile-debug
        shell: cmd
        run: |
          @echo | msbuild -m build/cpputils.vcxproj /t:build /p:Configuration="Debug" /p:Platform="x64" /p:BuildInParallel=true
          
      # Prepare package Release
      - name: prepare-package-Release
        shell: cmd
        run: |
          mkdir Release\
          mkdir Release\CppUtils
          copy "bin\Lib\Release\*" "Release\ILSD\"
          
      # Prepare package Debug
      - name: prepare-package-Debug
        shell: cmd
        run: |
          mkdir Debug\
          mkdir Debug\CppUtils
          copy "bin\Lib\Release\*" "Release\CppUtils\"
          
      # Generate artifact Debug
      - uses: actions/upload-artifact@v2
        with:
          name: ILSD Debug
          path: Debug/
    
      # Generate artifact Release
      - uses: actions/upload-artifact@v2
        with:
          name: ILSD Release
          path: Release/



  # Release
  build-nightly-windows:
    runs-on: windows-2019
    needs: [build-windows]
    
    steps:
    
    # Download artifact
    - uses: actions/download-artifact@v2
      with:
        name: CppUtils Debug
        path: Debug/
      
    - uses: actions/download-artifact@v2
      with:
        name: CppUtils Release
        path: Release/
      
    # Zip
    - run: |     
        powershell Compress-Archive -Path Release\* -DestinationPath CppUtils-Release.zip
        powershell Compress-Archive -Path Debug\* -DestinationPath CppUtils-Debug.zip
      shell: cmd
    
    # Release
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "CppUtils"
        prerelease: true
        title: "CppUtils"
        files: | 
            CppUtils-Debug.zip
            CppUtils-Release.zip
